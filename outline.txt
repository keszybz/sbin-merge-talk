In 2012, we moved the installed OS under `/usr`,
merging `/bin` into `/usr/bin` and `/sbin` into `/usr/sbin`,
implementing [UsrMove](https://fedoraproject.org/wiki/Features/UsrMove).
But the split between `/usr/sbin` and `/usr/bin` remained.
In 2024, we made the decision to merge `/usr/sbin` into `/usr/bin`,
finally getting rid of the legacy subdivision of directories.

In this talk, I'll discuss why we want to do this,
how it's being implemented,
and how it is going.

https://fedoraproject.org/wiki/Changes/Unify_bin_and_sbin





History:

http://lists.busybox.net/pipermail/busybox/2010-December/074114.html

1969 — UNIX is created on PDP-7
1971 — update to PDP-11 with two 1.5 MB disks
     — the OS "spills over" onto the second disk
     — a third disk is attached and /home is created

other good reasons apart from disk space:
- periodic fsck (180 days or n mounts)
- fsck time proportional to fs size

1990 — JFS in AIX 3.1
1993 — NTFS in Windows NT
2001 — EXT3 in Linux


https://lwn.net/Articles/671161/
> The original UNIX system had a / of 5MiB, and a /usr of 20MiB, and as the name says it was originally for user home directories, and later it got the traditional /usr/bin and /usr/lib for user-installed software, which then became sort of standard.

https://lwn.net/Articles/670885/
> Originally, the /usr directory was used to put home filesystems. This has obviously changed to /home. But, because /usr had home directories, the chance that the filesystem would be corrupt was higher than for the / directory. Also, back then, a filesystem check which changed the root partition required a reboot to recover. So, even if one could have a big / directory, chances would be good that there would be an error requiring a reboot, and a re-check of that filesystem. Having a small root which did not frequently change allowed for faster boot operations, as even if / was corrupted, the recheck would be fast. And, if in the worst case, where / was impossibly corrupted (especially if the fsck program was inaccessible), recovery from backup would be less likely to lose data, other than in /etc, such as recent password changes. Finally, if the hard drive crashed (a frequent occurrence in the days of removable media), the entire root partition could be replaced, while the /usr could be recovered through incremental backups.

technical debt — the implied cost of future reworking required when
choosing an easy but limited solution instead of a better approach
that could take more time [Wikipedia]

technical debt — something that made sense at the time, but now is
just creating drag

https://www.freedesktop.org/wiki/Software/systemd/TheCaseForTheUsrMerge/
https://fedoraproject.org/wiki/Features/UsrMove
Fedora 17 (2012)


/bin and /sbin (and /usr/bin and /usr/sbin (and /usr/local/bin and /usr/local/sbin))

/sbin — Utilities used for system administration (and other root-only commands)

example: /sbin/mkfs.ext4

2006 — PolicyKit first commit
polkit — allow unprivileged processes to elevate privileges

$PATH for all users includes both sbin and bin
https://fedoraproject.org/wiki/Features/SbinSanity — Fedora 10, 2008

systemd sets clean environment for all services, with /sbin and /bin
(09082a94b64f0b3b6cec44d4d8f423ab9abd1630, 2010)

Note: different distributions do the split differently:
Fedora has /sbin/ip, Debian has /bin/ip
Fedora has /bin/chmem, Debian has /sbin/chmem
Fedora has /bin/isosize, Debian has /sbin/isosize
Fedora has /sbin/update-alternatives, Debian has /bin/update-alternatives
...

→ also a problem for systemd unit files

Idea: make /usr/sbin a symlink to /usr/bin, just like /bin is a symlink to /usr/bin
https://fedoraproject.org/wiki/Changes/Unify_bin_and_sbin

Basic file system construction in Fedora

`filesystem.rpm` — the actual layout on disk
`rpm.rpm` — the definitions of `%_bindir`, `%_sbindir`

Packages list "official paths" in %files, using %_bindir and %_sbindir.
When unpacking, rpm follows symlinks.
The layout on disk does not have to match what rpm reports!

Separate /usr/sbin/ is now just technical debt too.


The plan:
(https://lists.fedoraproject.org/archives/list/devel@lists.fedoraproject.org/message/3562IKYYO4YLC5IPS3WSV3DNQXW3V7QG/)

Basic assumptions:
- use normal packaging changes and scriptlets to implement the move
- no "flag day"
  - preparatory changes are conditional, compatible with both worldviews
  - when rebuilt, individual packages are changed to the new worldview
  - packages remain installable at all times

0. Adjust SELinux policy to make /sbin and /bin equivalent
 307 files changed, 862 insertions(+), 1261 deletions(-)

1. Remove old Packaging Guidelines rule to use "historical"
   locations for /bin vs. /usr/bin.
   Remove Packaging Guidelines rule to use /usr/sbin.
   
2. filesystem and rpm

3. test-rebuilds for various packages to fix
   FBTFS:
     %install
     ln -s %{buildroot}%{_bindir}/foo %{buildroot}%{_sbindir}/foo

   and FTI:
     Transaction failed: Rpm transaction failed.
       - file /usr/sbin/sestatus conflicts between attempted installs of
         policycoreutils-3.6-5.fc41.x86_64 and policycoreutils-3.6-5.fc41.x86_64
       - file /usr/sbin/named-checkzone conflicts between attempted installs of
         bind-utils-32:9.18.26-1.fc41.x86_64 and bind-utils-32:9.18.26-1.fc41.x86_64

4. Add "compat sbin Provides"
   Package a.rpm has %files: %_sbindir/foo
   Package b.rpm has Requires:/usr/sbin/foo
   When rebuilt, a.rpm now has /usr/bin/foo, b.rpm FTI.
   
   filesystem.rpm has a list of all paths under /usr/sbin and /sbin
   and will automatically create a symlink from /usr/sbin to /usr/bin
   when the file is moved in an upgraded package.

   a.rpm adds:
     %if "%_bindir" == "%_sbindir"
     Requires:filesystem(unmerged-sbin-symlinks)
     Provides:/usr/sbin/foo
     %endif

5. Rebuild filesystem and rpm
   Rebuild packages that would FTI
   (Some time later) Rebuild all other packages

This failed.

Side-tags are great: revert changes in filesystem and rpm, dump side-tag.


What failed:

- Lorax
  "runtime-cleanup" phase to remove various executables by path

  File were unexpectedly removed (/usr/bin/losetup, /usr/bin/mkswap)
  and unexpectedly left behind
  (62c2a714b7aa5c572795c22cb07696dffe3c2313,
   https://src.fedoraproject.org/rpms/lorax-templates-rhel/pull-request/11)

- bootc/ostree/rpm-ostree: (https://gitlab.com/fedora/bootc/tracker/-/issues/29)
  
  filesystem.rpm is not used, custom fs layout.

  Plan:
  - add Provides: filesystem(merged-sbin) in filesystem.rpm
    (https://src.fedoraproject.org/rpms/filesystem/pull-request/17)
  - conditionalize rpm-ostree to make /usr/sbin a symlink
  
- Missing compat symlinks for paths _not_ used in Requires
  
  Package c.rpm has /usr/sbin/bar (%_sbindir/bar).
  After being rebuilt in the new world, it has /usr/bin/bar.
  Scripts and systemd unit files may use the old path.
  If new filesystem is installed, compat symlinks will be provided.
  But there is no explicit Requires on the new filesystem,
  so partially upgraded systems are broken.

  Plan:
  - add Provides:filesystem(merged-sbin) in filesystem.rpm
    (https://src.fedoraproject.org/rpms/filesystem/pull-request/17)
  - add an rpm fileattr generator to automatically add
    Requires:filesystem(merged-sbin)
    (https://src.fedoraproject.org/rpms/filesystem/pull-request/15)

  Package c.rpm will now pull in new fileystem.rpm, guaranteeing
  that /usr/sbin/bar and /usr/bin/bar both work.

The plan:

5, attempt 2: Rebuild filesystem and rpm
   Rebuild packages that would FTI
   (Some time later) Rebuild all other packages

6. filesystem.rpm will symlink /usr/sbin to /usr/bin if
   /usr/sbin only contains symlinks to /usr/bin

7. systemd will set $PATH without /usr/sbin
   if /usr/sbin is a symlink

Lessons:
- Change is hard.
  "Fedora Linux" is a complex ecosystem with many different actors that consume the rpm content in very different ways.
- Communication is important. The earlier the better.
- Communication is not enough.
  Nobody anticipated problems with SELinux, Lorax, rpm-ostree.
- CI is great. OpenQA is great.
- Lack of local CI is a problem.
  No realistic way to do a "trial run".
- Big changes in Fedora are still possible, even if not easy.
